---
title: "Component-wise Z-residual Diagnosis for Bayesian Hurdle Models-Real Data"
output:
  html_document:
    # toc: true          # Enable table of contents
    # toc_depth: 1       # Depth of headings in TOC
    # toc_float: true    # TOC floats to the side
    # number_sections: false
    # theme: flatly      # Remove default Bootstrap theme
    # includes:
    #   in_header: custom_header.html
bibliography: refs.bib       # Point to your BibTeX file
link-citations: yes
# runtime: shiny
date: "`r Sys.Date()`"
---

```{=html}
<style>
body, .container-fluid, .main-container {
  max-width: 100% !important;
  width: 95%;
  margin: auto;
  panmes.dataing: 20px;
}

h1 {
  color: darkred;
}
</style>
```

### Dataset

This example illustrates the use of hurdle models to analyze healthcare utilization among older adults. The dataset is drawn from the National Medical Expenditure Survey (NMES), a nationally representative U.S. survey conducted in 1987-1988. A subsample of 4,406 individuals aged 66 and older, all enrolled in Medicare, is used. The primary response variable is the number of emergency department (ED) visits, with demographic, socioeconomic, and health-related covariates included in the analysis.

```{r, include=FALSE}
# Not displayed in HTML
# All required packages
library(DT)
library(dplyr)

# PATH is set to Github
#path <- "https://github.com/dananjids/hurdlemodels/tree/main/"
path <- "C:/Users/ocf542/OneDrive - University of Saskatchewan/USask/Research/hurdle_model/demo/"
```

```{r, warning=FALSE}
library(hurdlemodels)
data("nmes.data")
```

```{r}
nmes.data$hlth <- NA  # Initialize with NA
nmes.data$hlth[nmes.data$exclhlth == 1] <- 2 # Set hlth = 2 for Excellent
nmes.data$hlth[nmes.data$poorhlth == 1] <- 0 # Set hlth = 0 for Poor
nmes.data$hlth[nmes.data$exclhlth == 0 & nmes.data$poorhlth == 0] <- 1 # Set hlth = 2 for Average
```

```{r echo = FALSE}
datatable(nmes.data,
              options = list(scrollX = TRUE, paging=TRUE),
              caption = "Table 1: NMES dataset")
```

### Fit models

The data are modeled using hurdle Poisson (`r HP`) and hurdle negative binomial (`r HNB`) models via the `brms` package in R. These models allow to examine whether the logistic and count components offer additional, more localized insights compared to those obtained from the combined hurdle model.

```{r}
nmes.data1 <- nmes.data %>% select(c(emr, numchron, hlth, adldiff, school))
nmes.data2 <- nmes.data %>% select(c(emr, numchron, hlth, adldiff, school, black))
```

```{r}
predictors_hnb <- c("numchron", "hlth", "adldiff", "school")
predictors_hp <- c("numchron", "hlth", "adldiff", "school", "black")
count_formula_hnb <- formula(paste("emr ~ ", paste(predictors_hnb, collapse=" + ")))
zero_formula_hnb <- formula(paste("hu ~ ", paste(predictors_hnb, collapse=" + ")))
count_formula_hp <- formula(paste("emr ~ ", paste(predictors_hp, collapse=" + ")))
zero_formula_hp <- formula(paste("hu ~ ", paste(predictors_hp, collapse=" + ")))
```

```{r eval=FALSE}
fit_hnb <- brm(bf(count_formula_hnb, zero_formula_hnb),
               data = nmes.data1,
               family = hurdle_negbinomial(link = "log", link_shape = "identity", link_hu = "logit"),
               prior = c(prior(normal(0, 5), class = "b"),
                         prior(normal(0, 5), class = "Intercept"),
                         prior(gamma(0.01, 0.01), class = "shape"),
                         prior(normal(0, 2), class = "b", dpar = "hu")),
               refresh = 0)

fit_hp <- brm(bf(count_formula_hp, zero_formula_hp),
              data = nmes.data2,
              family = hurdle_negbinomial(link = "log",
                                          link_shape = "identity",
                                          link_hu = "logit"),
              prior = prior("normal(1000, 1)", class = "shape"), refresh = 0)
```

### Z-residual calculation

We computed Z-residuals for logistic, count and hurdle components separately using the Posterior `r RPP` method for the NMES dataset.

```{r eval=FALSE}
zres_hnb_zero <- zresidual_hurdle_negbinomial(fit_hnb, type = "zero", method = "post", nrep = 50)
zres_hnb_count <- zresidual_hurdle_negbinomial(fit_hnb, type = "count", method = "post", nrep = 50)
zres_hnb_hurdle <- zresidual_hurdle_negbinomial(fit_hnb, type = "hurdle", method = "post", nrep = 50)

zres_hp_zero <- zresidual_hurdle_poisson(fit_hp, type = "zero", method = "post", nrep = 50)
zres_hp_count <- zresidual_hurdle_poisson(fit_hp, type = "count", method = "post", nrep = 50)
zres_hp_hurdle <- zresidual_hurdle_poisson(fit_hp, type = "hurdle", method = "post", nrep = 50)
```

```{r eval=FALSE, echo=FALSE}
# ---Off comments when need to rerun the demo.html
# ---Not displayed in HTML
# ---Saving the loaded fits and zres Rdata to DEMO folder

# saveRDS(fit_hnb, file = paste0(path, "fit_hnb.Rds"))
# saveRDS(fit_hp, file = paste0(path, "fit_hp.Rds"))
# saveRDS(zres_hnb_zero, file = paste0(path, "zres_hnb_zero50.Rds"), compress = TRUE)
# saveRDS(zres_hnb_count, file = paste0(path, "zres_hnb_count50.Rds"), compress = TRUE)
# saveRDS(zres_hnb_hurdle, file = paste0(path, "zres_hnb_hurdle50.Rds"), compress = TRUE)
# saveRDS(zres_hp_zero, file = paste0(path, "zres_hp_zero50.Rds"), compress = TRUE)
# saveRDS(zres_hp_count, file = paste0(path, "zres_hp_count50.Rds"), compress = TRUE)
# saveRDS(zres_hp_hurdle, file = paste0(path, "zres_hp_hurdle50.Rds"), compress = TRUE)
```

```{r, echo=FALSE}
# ---Not displayed in HTML
# ---Loading the loaded fits and zres Rds from local disk
zres_hnb_zero <- readRDS(paste0(path, "zres_hnb_zero50.Rds"))
zres_hnb_count <-  readRDS(paste0(path, "zres_hnb_count50.Rds"))
zres_hnb_hurdle <-  readRDS(paste0(path, "zres_hnb_hurdle50.Rds"))
zres_hp_zero <-  readRDS(paste0(path, "zres_hp_zero50.Rds"))
zres_hp_count <-  readRDS(paste0(path, "zres_hp_count50.Rds"))
zres_hp_hurdle <-  readRDS(paste0(path, "zres_hp_hurdle50.Rds"))
```

### Graphically assess model

Figure 1 displays diagnostic plots of Z-residuals for the logistic, count, and overall components of the `r HNB` model. The residuals generally fall within the expected range (-3 to 3) without showing strong patterns, indicating a good model fit. Some outliers are present, particularly in the logistic component, as highlighted in the Q-Q plots. These outliers also appear in the overall model but are mostly driven by the logistic part. None of the residual-based statistical tests (`r SW`, `r ANOVA`, `r `BL`) yield significant p-values for any of the model components, providing no strong evidence of model misspecification. Collectively, these diagnostic results suggest that the hurdle negative binomial model offers an adequate fit to the data.

```{r  zresid_animation_hnb, fig.show='animate', interval=0.5, out.width='100%', animation.hook='gifski', results = 'hide', fig.cap="Figure 1: QQ Plots and Scatter plots of HNB for logistic, count and hurdle components.", fig.align='center'}
  for(i in 1:50){
    par(mfrow = c(2,3), mar = c(2, 2, 2, 2))
    qqnorm.zresid(zres_hnb_zero, irep = i, main.title = "HNB, Zero")
    qqnorm.zresid(zres_hnb_count, irep = i, main.title = "HNB, Count")
    qqnorm.zresid(zres_hnb_hurdle, irep = i, main.title = "HNB, Hurdle")

    plot.zresid(zres_hnb_zero, irep = i, X="fitted.value", outlier.return = T, main.title = NULL)
    plot.zresid(zres_hnb_count, irep = i, X="fitted.value", outlier.return = T, main.title = NULL)
    plot.zresid(zres_hnb_hurdle, irep = i, X="fitted.value", outlier.return = T, main.title = NULL)
  }
```

Figure 2 shows Z-residual diagnostics for the logistic, count, and hurdle components of the `r HP` model. The hurdle component exhibits greater variability and a funnel shape in the residuals versus fitted plot, along with large outliers and deviations from normality in the Q-Q plot, suggesting potential misspecification. In contrast, the logistic component displays more stable residuals and better alignment with theoretical quantiles. These observations are supported by the `r SW` test, which yields a significant p-value for the hurdle component and a non-significant result for the logistic component.

```{r  zresid_animation_hp, fig.show='animate', interval=0.5, out.width='100%', animation.hook='gifski', results = 'hide', fig.cap="QQ Plots and Scatter plots of HP for logistic, count and hurdle components.", fig.align='center'}
  for(i in 1:50){
    par(mfrow = c(2,3), mar = c(2, 2, 2, 2))
    qqnorm.zresid(zres_hp_zero, irep = i, main.title = "HP, Zero")
    qqnorm.zresid(zres_hp_count, irep = i, main.title = "HP, Count")
    qqnorm.zresid(zres_hp_hurdle, irep = i, main.title = "HP, Hurdle")

    plot.zresid(zres_hp_zero, irep = i, X="fitted.value", outlier.return = T, main.title = NULL)
    plot.zresid(zres_hp_count, irep = i, X="fitted.value", outlier.return = T, main.title = NULL)
    plot.zresid(zres_hp_hurdle, irep = i, X="fitted.value", outlier.return = T, main.title = NULL)
  }
```

